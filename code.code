#include <QApplication>
#include <QTableView>
#include <QStandardItemModel>
#include <QStandardItem>
#include <QHeaderView>
#include <QVBoxLayout>
#include <QWidget>

class MainWindow : public QWidget {
    Q_OBJECT

public:
    MainWindow() {
        // Создаем модель
        model = new QStandardItemModel(this);
        model->setHorizontalHeaderLabels({"Имя", "Значение", "Минимальное значение", "Максимальное значение"});

        // Добавляем примеры данных
        addSetting("Настройка шлюза", "192.168.1.1", "192.168.1.0", "192.168.1.255");
        addSetting("Настройка сервера", "example.com", "0.0.0.0", "255.255.255.255");
        addSetting("Другая настройка", "Изначальное значение", "0", "1");

        // Создаем представление таблицы
        tableView = new QTableView(this);
        tableView->setModel(model);
        tableView->horizontalHeader()->setStretchLastSection(true);
        tableView->verticalHeader()->setVisible(false);

        // Устанавливаем раскрывание
        tableView->setItemDelegateForColumn(0, new ExpandableDelegate(this));

        QVBoxLayout *layout = new QVBoxLayout(this);
        layout->addWidget(tableView);
        setLayout(layout);
    }

    void addSetting(const QString &name, const QString &value, const QString &minValue, const QString &maxValue) {
        // Убираем дополнительные строки
        QStandardItem *itemName = new QStandardItem(name);
        itemName->setData(QVariant(true), Qt::UserRole); // Скрываем по умолчанию

        QStandardItem *itemValue = new QStandardItem(value);
        QStandardItem *itemMinValue = new QStandardItem(minValue);
        QStandardItem *itemMaxValue = new QStandardItem(maxValue);

        model->appendRow(itemName);
        model->appendRow(QList<QStandardItem*>() << itemValue << itemMinValue << itemMaxValue);
    }

private:
    QTableView *tableView;
    QStandardItemModel *model;

private slots:
    void onItemClicked(const QModelIndex &index) {
        // Здесь добавьте логику раскрытия/скрытия
        if (index.isValid() && index.column() == 0) { // если кликнули по имени
            QStandardItem *item = model->item(index.row());
            if (item && !item->data(Qt::UserRole).toBool()) {
                // Логика раскрытия
                // Ваш код для раскрытия
            } else {
                // Логика скрытия
                // Ваш код для скрытия
            }
        }
    }
};

int main(int argc, char *argv[]) {
    QApplication app(argc, argv);
    MainWindow window;
    window.show();

    return app.exec();
}