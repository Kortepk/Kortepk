#include <QApplication>
#include <QTreeView>
#include <QStandardItemModel>

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);

    // Создаем модель
    QStandardItemModel model;

    // Устанавливаем заголовки столбцов
    model.setHorizontalHeaderLabels({"Имя", "Значение", "Минимальное", "Максимальное"});

    // Создаем корневые элементы (настройка шлюза и устройства)
    QStandardItem *gatewayItem = model.invisibleRootItem()->appendRow(new QStandardItem("Настройка шлюза"));
    QStandardItem *deviceItem = model.invisibleRootItem()->appendRow(new QStandardItem("Настройка устройства"));

    // Настройка шлюза
    QStandardItem *ipItem = new QStandardItem("IP");
    ipItem->setEditable(true);  // Делаем ячейку редактируемой
    gatewayItem->appendRow({ipItem, new QStandardItem("192.168.0.1"), new QStandardItem("0.0.0.0"), new QStandardItem("255.255.255.255")});

    QStandardItem *portItem = new QStandardItem("Port");
    portItem->setEditable(true);  // Делаем ячейку редактируемой
    gatewayItem->appendRow({portItem, new QStandardItem("8080"), new QStandardItem("0"), new QStandardItem("65535")});

    // Настройка устройства (можно добавить параметры аналогично)
    QStandardItem *deviceParam = new QStandardItem("Параметр устройства");
    deviceParam->setEditable(true);  
    deviceItem->appendRow({deviceParam, new QStandardItem("значение"), new QStandardItem("минимальное"), new QStandardItem("максимальное")});

    // Создаем QTreeView
    QTreeView treeView;
    treeView.setModel(&model);

    treeView.expandAll();  // Разворачиваем все элементы
    treeView.setWindowTitle("QTreeView Example");
    treeView.resize(400, 300);
    treeView.show();

    return app.exec();
}